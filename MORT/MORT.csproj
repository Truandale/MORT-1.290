<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup Label="Globals">
    <WebView2UseWinRT>False</WebView2UseWinRT>
    <WebView2LoaderPreference>Dynamic</WebView2LoaderPreference>
  </PropertyGroup>

  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net9.0-windows10.0.22621.0</TargetFramework>
    <UseWindowsForms>true</UseWindowsForms>
    <UseWindowsDesktopSdk>true</UseWindowsDesktopSdk>
    <Platforms>x64</Platforms>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Description>Monkeyhead's OCR Realtime Translator</Description>
    <Company>Monkeyhead</Company>
    <Copyright>Copyright ©  2013</Copyright>
    <Authors>Monkeyhead</Authors>
    <AssemblyVersion>1.0.0.1</AssemblyVersion>
    <FileVersion>1.30.0.0</FileVersion>
    <AssemblyName>$(MSBuildProjectName)</AssemblyName>
    <UseWPF>True</UseWPF>
    <Nullable>enable</Nullable>
    <ApplicationIcon>mainIcon.ico</ApplicationIcon>
    <ApplicationManifest>app.manifest</ApplicationManifest>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <DebugType>embedded</DebugType>
    <Optimize>False</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <DebugType>embedded</DebugType>
    <Optimize>False</Optimize>
  </PropertyGroup>

  <ItemGroup>
    <Content Include="mainIcon.ico" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Web.WebView2" Version="1.0.2045.28" />
    <PackageReference Include="NAudio" Version="2.2.1" />
    <PackageReference Include="Python.Included" Version="3.11.6" />
    <PackageReference Include="RestSharp" Version="106.12.0" />
    <PackageReference Include="SharpClipboard" Version="3.5.2" />
    <PackageReference Include="SharpDX.Direct3D11" Version="4.2.0" />
    <PackageReference Include="System.Runtime.InteropServices.WindowsRuntime" Version="4.3.0" />
    <PackageReference Include="System.Windows.Extensions" Version="7.0.0" />
    <!-- STT библиотеки -->
    <PackageReference Include="Whisper.net" Version="1.7.0" />
    <PackageReference Include="Vosk" Version="0.3.38" />
    <!-- Azure Speech Service SDK -->
    <PackageReference Include="Microsoft.CognitiveServices.Speech" Version="1.34.1" />
    <!-- Windows Speech Recognition -->
    <PackageReference Include="System.Speech" Version="8.0.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\CloudVision\CloudVision.csproj" />
    <ProjectReference Include="..\GSTrans\GSTrans.csproj" />
  </ItemGroup>

  <!-- Копирование ресурсов mort_resource -->
  <ItemGroup>
    <None Include="Resources\mort_resource\**\*" CopyToOutputDirectory="Always" LinkBase="/" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Properties\Settings.Designer.cs">
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <None Update="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
  </ItemGroup>

  <!-- Ensure NAudio dependencies are copied to output directory -->
  <Target Name="CopyNAudioDependencies" AfterTargets="Build">
    <ItemGroup>
      <NAudioFiles Include="$(NuGetPackageRoot)naudio\2.2.1\lib\net6.0\NAudio*.dll" />
    </ItemGroup>
    <Copy SourceFiles="@(NAudioFiles)" DestinationFolder="$(OutputPath)" SkipUnchangedFiles="true" />
    <!-- Also copy to x64 output directory if it exists -->
    <Copy SourceFiles="@(NAudioFiles)" DestinationFolder="$(OutputPath)" SkipUnchangedFiles="true" Condition="Exists('$(OutputPath)')" />
  </Target>

  <!-- Копирование ресурсов mort_resource (дополнительное обеспечение) -->
  <Target Name="CopyMortResources" AfterTargets="Build">
    <Message Text="Копирование ресурсов mort_resource..." Importance="high" />
    <ItemGroup>
      <MortResourceFiles Include="Resources\mort_resource\**\*" />
    </ItemGroup>
    <Copy SourceFiles="@(MortResourceFiles)" 
          DestinationFiles="@(MortResourceFiles->'$(OutputPath)%(RecursiveDir)%(Filename)%(Extension)')" 
          SkipUnchangedFiles="true" />
    <Message Text="Ресурсы mort_resource скопированы в $(OutputPath)" Importance="high" />
  </Target>

</Project>